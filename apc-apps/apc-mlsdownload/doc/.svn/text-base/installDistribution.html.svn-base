<html>

<head>
<title>VieleRETS Documentation</title>
<link rel="stylesheet" type="text/css" href="./resources/styles.css">
</head>

<body topmargin="0" leftmargin="0" marginwidth="0" marginheight="0">

<table border="0" cellspacing="10" cellpadding="0">





<!-- header -->

<tr align="left">
<td>

<table border="0" cellspacing="0" cellpadding="0">

<tr>

<!-- logo -->
<td>
<table border="0" cellspacing="0" cellpadding="0">
<tr><td><img src="./resources/viele_logo.gif"></td></tr>
<tr><td><br/></td></tr>
</table>
</td>
<!-- logo -->

<!-- document block -->
<td>

<table border="2" cellspacing="0" cellpadding="5">

<tr>
<td id="docheading">
Project Name
</td>
<td id="doctext">
VieleRETS 1.1 
</td>
</tr>

<tr>
<td id="docheading">
Publication Name
</td>
<td id="doctext">
Installation Guide
</td>
</tr>

<tr>
<td id="docheading">
Publication Date
</td>
<td id="doctext">
May 2006
</td>
</tr>

<tr>
<td id="docheading">
Maintainer
</td>
<td id="doctext">
mlesswing@realtors.org
</td>
</tr>

</table>
</td>
<!-- document block -->

</tr>

</table>
</td>

</tr>

<!-- header -->



<tr>
<td>

<table border="0" cellspacing="10" cellpadding="0">
<tr>

<td>
<a href="./installationGuide.html">Installation Guide</a>
</td>

<td>
<a href="./index.html">Table of Contents</a>
</td>

</tr>
</table>

</td>
</tr>



<!-- installation -->

<tr>
<td>
<table border="0" cellspacing="10" cellpadding="0">

<tr>
<td id="sectionheading">
3.0 Install the Distribution
</td>
</tr>

<tr>
<td>
<table border="0" cellspacing="10" cellpadding="0">

  <tr>
  <td id="sectiontext">

From the <var>DISTRIBUTION_DIRECTORY</var>, locate the 
<a href="./downloadDistribution.html"><var>DISTRIBUTION_FILE</var></a>
.  

<br/><br/>

Unix and Mac users should issue the command:

<xmp>tar xvzf {DISTRIBUTION_FILE}</xmp>

Windows users should "unzip" the file like this:

<xmp>pkunzip {DISTRIBUTION_FILE}</xmp>

This process creates the 
<a name="installation_directory"><var>INSTALLATION_DIRECTORY</var></a>
.  The layout of this directory contains the following files and directories:

<ul>

<li><b>about.php</b> - A PHP script to display the "about" page.<br/><br/></li>

<li><a name="bcf_directory"> <b>batch file control directory</b></a>
- A directory containing files used to control the package from the command 
line.  <br/><br/></li>

<li><a name="cache_directory"> <b>cache directory</b></a>
- A directory containing temporary files used by the package when accessing RDB
systems.<br/><br/></li>

<li><a name="common_directory"> <b>common directory</b></a>
- A directory containing software that is shared by consumer and administrative 
functions referred to in other parts of this documentation as 
<var>COMMON_DIRECTORY</var>.<br/><br/></li>

<li><b>controller.php</b> - A file that contains locations of all of the
system components that is included by most scripts.<br/><br/></li>

<li><b>doc directory</b> - A directory containing this system 
documentation.<br/><br/></li>

<li><a name="extras_directory"><b>extras directory</b> - A directory containing
scripts contributed by users or extensions to the base package.
<br/><br/></li>

<li><b>index.php</b> - The primary interface to the package.<br/><br/></li>

<li><b>install.bat</b> - Installation script for Windows.<br/><br/></li>

<li><b>install.sh</b> - Installation script for Mac OSX, Unix and Linux.
<br/><br/></li>

<li><b>License.txt</b> - A text file containing the License.<br/><br/></li>

<li><b>media_proxy.php</b> - A PHP script that contains access to images for 
those RETS servers that do not support hte Location option of GetObject.
<br/><br/></li>

<li><b>README.txt</b> - A text file describing the project.<br/><br/></li>

<li><b>resources directory</b> - A directory containing miscellaneous style 
sheets and images used by the Administrative Interface.<br/><br/></li>

<li><b>run_extract.php</b> - A PHP script that selects one of the defined 
extracts or "jobs".  This script is called by the index.php script.
<br/><br/></li>

<li><b>run_interactive.php</b> - A PHP script that provides a commmand
line interface to running "jobs".  This script cna be called by utilities
like cron.
<br/><br/></li>

<li><b>run_job.php</b> - A PHP script that runs an extract or "job".  This
script is called by the run_extract.php script.
<br/><br/></li>

<li><b>run_results.php</b> - A PHP script that displays the results of running
an "extract" or "job".  This script is called by the run_job.php script.
<br/><br/></li>

<li><a name="setup_directory"> <b>setup directory</b></a>
- A directory containg all Adminstrative Interface functions including a
templates subdirectory to assist with configuration that is referred to in 
other parts of this documentation as <var>SETUP_DIRECTORY</var>.</li>

</ul>

Execute the appropriate installation script for the operating system you are
using.  This would be either <var>install.bat</var> (for Windows) or 
<var>install.sh</var> (Mac OSX, Unix or Linux). The script creates three
directories:

<ul>

<li><a name="bcf_directory"> <b>batch file control directory</b></a>
- A directory containing files used to control the package from the command 
line.  <br/><br/></li>

<li><a name="extracts_directory"> <b>extracts directory</b></a>
- A directory containing definitions of "jobs" that can be run.  It will 
be referred to in other parts of this documentation as 
<var>EXTRACTS_DIRECTORY</var>.<br/><br/></li>

<li><a name="sources_directory"> <b>sources directory</b></a>
- A directory containing definitions of all data connections to MLS servers
referred to in other parts of this documentation as 
<var>SOURCES_DIRECTORY</var>.<br/><br/></li>

<li><a name="targets_directory"> <b>targets directory</b></a>
- A directory containing definitions of locations that this package will 
download information into.  It will be referred to in other parts of this 
documentation as <var>TARGETS_DIRECTORY</var>.
<br/><br/></li>

<li><a name="metadata_directory"> <b>metadata directory</b></a>
- A directory containg metadata supplied by the RETS server for things like
lookup values and description.  It is referred to in other parts of this 
documentation as
<var>METADATA_DIRECTORY</var>.
</li>

</ul>

Now configure you web server to recognize the <var>INSTALLATION_DIRECTORY</var> 
.  You will be able to specify a more user-friendly location to make the URL 
look nicer to consumers.  We will call this the    
<a name="site_url"><var>SITE_URL</var></a>
.  

<br/><br/>

Files found in the root directory of the SITE_URL include a script called 
index.php.  This script is called the
<a name="primary_interface"><var>Primary Interface</var></a>.  The setup directory also
contains an index.php script.  This script is called the 
<a name="administrative_interface"><var>Administrative Interface</var></a>
.  The Administrative Interface allows you to define and modify sources, 
targets and extracts.  It also contains access the system documentation.

<br/><br/>

You should consider removing the Administrative Interface from the public
site after configuration is complete.  Any consumer reading this documentation
could figure out how to invoke it, giving them access to the "look and feel" 
of your website as well as your account and password for the MLS.

</br></br>

The most important directory to protect is the <var>sources</var> directory.
It includes account names and passwords given to you by your MLS to access
their server.

</br></br>

Examples of a couple of web servers are provided below.  These samples should
not be considered authoritative.  You should consult manuals or seek 
professional assistance before deploying this package in a production
environment.

  </td>
  </tr>

  <tr>
  <td id="sectionHeading">
Apache (UNIX):
  </td>
  </tr>

  <tr>
  <td>

    <table border="0" cellspacing="10" cellpadding="0">

    <tr>
    <td id="sectionText">

Assuming you installed the distribution into the /work/projects/vieleRETS-1.1
directory, add the following to the http.conf configuration file:

    </td>
    </tr>

    </table>

<xmp>#
# VieleRETS 1.1
#
Alias /viele "/work/projects/vieleRETS-1.1"
</xmp>

    <table border="0" cellspacing="10" cellpadding="0">

    <tr>
    <td id="sectionText">

After this change is made, the http server should be restarted.  If the server 
was configured to serve localhost (unlikely, unless you are in a test-only
environment), the following URL (<var>SITE_URL</var>) would access the RETS
client:

<br/><br/>

http://localhost/viele/index.php

    </td>
    </tr>
    </table>

  </td>
  </tr>

  <tr>
  <td id="sectionHeading">
Apache (Windows):
  </td>
  </tr>

  <tr>
  <td>

    <table border="0" cellspacing="10" cellpadding="0">

    <tr>
    <td id="sectionText">

Apache for Windows includes PHP modules by default.  The configuration is 
similar to the UNIX version.

<br/><br/>

Add the following lines to the httpd.conf file usually found in 
%APACHE HOME%\Apache\Conf.  %APACHE HOME% can be many places based upon your 
Apache version and other installed software.  For example, previous to Apache
1.3.x, the typical installation directory was C:\Apache, however, the current
installation directory defaults to C:\Program Files\Apache Group\Apache.  If 
you are using the Oracle 8i or 9i application server, Apache will be found in 
%ORACLE HOME%\Apache.

<br/><br/>

The following additions to the http.conf file will configure the package.
In this case, the virtual address of "viele"
corresponds the the <var>INSTALLATION_DIRECTORY</var> of C:\RETS\vieleRETS-1.1:

    </td>
    </tr>

    </table>

<xmp>#
# vieleRETS 1.1
#
Alias /viele "C:\RETS\vieleRETS-1.1"
</xmp>

    <table border="0" cellspacing="10" cellpadding="0">

    <tr>
    <td id="sectionText">

Add the following line to the ScriptAlias section of the Apache Configuration
file.  The directory should be the same as the directory where php.exe was 
installed.

<br/><br/>

ScriptAlias /php/ "C:/php/"

<br/><br/>

Add the following to the AddType section of the Apache Configuration file.

<br/><br/>

AddType application/x-httpd-php .php
AddType application/x-httpd-php-source .phps

<br/><br/>

Add the following to the Action section of the Apache Configuration file.

<br/><br/>

Action application/x-httpd-php /php/php.exe

<br/><br/>

Add " index.php" to the end of the "DirectoryIndex index.html" line.

<br/><br/>

IMPORTANT NOTE ON PHP TEMP FILES

<br/><br/>

Create the directory C:\tmp if it does not already exist and grant read and 
write privileges to the PHP user on this directory.  This directory will contain
the RETS metadata cache files.  If C:\tmp is not created, PHP will try to place
temp files in default Windows temp directories.  Often, these directories deny
certain permissions that cause caching to fail and they should not be used if
if possible.

    </td>
    </tr>
    </table>

  </td>
  </tr>

  <tr>
  <td id="sectionHeading">
IIS (Windows):
  </td>
  </tr>

  <tr>
  <td>

    <table border="0" cellspacing="10" cellpadding="0">

    <tr>
    <td id="sectionText">

If you used the PHP Windows Installer and selected IIS for your Web Server, the
configuration for PHP with IIS is complete.  Please follow the instructions for
IIS Configuration with PHP.

<br/><br/>

The following additions to the http.conf file will configure the package. 
In this case, the virtual address of "viele" corresponds to the 
<var>INSTALLATION_DIRECTORY</var> of C:\RETS\veleRETS-1.1.

<br/><br/>

This package uses a virtual directory under the existing Default Web Site.  To 
create a virtual host under IIS, open the IIS Console, right click on Default 
Web Site and click New-Virtual Directory.  Configure the virtual directory 
using the IIS wizard.  The virtual directory MUST be named:

<br/><br/>

viele

<br/><br/>

The root directory of the virtual directory should be:

<br/><br/>

%RETS INSTALLATION DIRECTORY%\php 
where the %RETS INSTALLATION DIRECTORY% is C:\RETS\vieleRETS-1.1).

<br/><br/>

After successful creation, right click on the virtual directory home and choose
Properties.  Under the Documents tab, add "index.php" to the list of default 
files and move this entry to the top of the list.

<br/><br/>

IMPORTANT NOTE ON TEMP FILES

<br/><br/>

Create the directory C:\tmp if it does not already exist and grant read and 
write privleges to the PHP user on this directory.  This directory will contain
the RETS metadata cache files.  If C:\tmp is not created, PHP will try to place
temp files in default Windows temp directories.  Often, these directories 
contain certain permissions that cause caching to fail and they should not be 
used if possible.

<br/><br/>

Errors and solutions for installing and using PHP under IIS are detailed on the
PHP Project site located at:

<br/><br/>

http://www.php.net.

    </td>
    </tr>
    </table>

  </td>
  </tr>

  <tr>
  <td id="sectionHeading">
OmniHTTPd (Windows):
  </td>
  </tr>

  <tr>
  <td>

    <table border="0" cellspacing="10" cellpadding="0">
 
    <tr>
    <td id="sectionText">

If you used the PHP Windows Installer, the configuration for PHP is a manual
process best described by the Omni documentation.  

<br/><br/>

RETS uses a virtual directory under the existing Default Web Site.  The
virtual directory can be named:

<br/><br/>

viele

<br/><br/>

IMPORTANT NOTE ON TEMP FILES

<br/><br/>

Create the directory C:\tmp if it does not already exist and grant read and 
write privleges to the PHP user on this directory.  This directory will contain
the RETS metadata cache files.  If C:\tmp is not created, PHP will try to place
temp files in default Windows temp directories.  Often, these directories 
contain certain permissions that cause caching to fail and they should not be
used if possible.

<br/><br/>

Errors and solutions for installing and using PHP under OmniHTTPd are detailed
on the Onmi Project site located at:

<br/><br/>

http://www.omnicron.ca.

    </td>
    </tr>
    </table>

  </td>
  </tr>


</table>
</td>
</tr>
</table>


<!-- installation -->





<tr>
<td>

<table border="0" cellspacing="10" cellpadding="0">
<tr>

<td>
<a href="./installationGuide.html">Installation Guide</a>
</td>

<td>
<a href="./index.html">Table of Contents</a>
</td>

</tr>
</table>

</td>
</tr>







</table>

</body>

</html>
